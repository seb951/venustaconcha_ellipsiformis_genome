setwd("~/Dropbox/CSBQ/Colin_Favret/")
paste("percent_missing_",missing[i],sep = "")
i = 1
missing
missing = c(0.1,0.2,0.3,0.4,0.5)
missing
paste("percent_missing_",missing[i],sep = "")
getwd()
m = 5
T174_all_loci_percent = T174_all_loci_m[,T174_all_loci_miss < missing[m]]
T174_all_loci_percent_raxml = rep(0,57)
for(i in 1:57)
{
T174_all_loci_percent_raxml[i] = paste(T174_all_loci_percent[i,], collapse = "")
}
T174_all_loci_percent_raxml = cbind(T174_all_loci[2:58,1],T174_all_loci_percent_raxml)
T174_all_loci_percent_raxml = rbind(c(57,ncol(T174_all_loci_percent)),T174_all_loci_percent_raxml)
if(file.exists(paste("percent_missing_",missing[i],sep = "")) == F) system(paste("mkdir percent_missing_",missing[m],sep = "")) #set up new directory
setwd(paste("~/Dropbox/csbq/Colin_Favret/percent_missing_",missing[m],sep = ""))
write.table(T174_all_loci_percent_raxml,paste("T174_all_loci_raxml_",missing[m],sep = ""), row.names = F, col.names = F, quote = F,sep = "\t")
raxml_missing = paste("raxmlHPC-PTHREADS -T 4 -s T174_all_loci_percent_raxml -n T174_ConcatLoci -m GTRGAMMA -p 99682 -x 68316 -# 100 -f a -o I4332_TT13_1_Hemiptera_Aphididae_Essigella_californica_seq1,I4333_CF1269_Hemiptera_Aphididae_Eulachnus_rileyi_seq1,I4334_CF1290_Hemiptera_Aphididae_Schizolachnus_piniradiatae_seq1,I5710_CF1291_1_2_Hemiptera_Aphididae_Cinara_anelia_seq1,I5709_CF1340_2_Hemiptera_Aphididae_Cinara_curvipes_seq1,I9063_96497_Hemiptera_Phylloxeridae_Phylloxera_sp__seq1,I9063_96497_Hemiptera_Phylloxeridae_Phylloxera_sp__seq2,I9072_396861_Hemiptera_Aphididae_Aphis_gossypii_seq1,I9072_396861_Hemiptera_Aphididae_Aphis_gossypii_seq2,I9073_396963_Hemiptera_Adelgidae_Adelges_cooleyi_seq1,I9073_396963_Hemiptera_Adelgidae_Adelges_cooleyi_seq2",sep = "")
dim(T174_all_loci_miss)
setwd("~/Dropbox/CSBQ/Colin_Favret/")
###here we will keep only a certain number of nucleotides for phylogenetic analyses...
T174_all_loci = read.table("RAxML_2alleles/T174_all_loci", stringsAsFactors = F,header = F)
T174_ConcatLoci.charSets = read.table("RAxML_2alleles/T174_ConcatLoci.charSets",stringsAsFactors = F, header = F)
T174_ConcatLoci.charSets = cbind(T174_ConcatLoci.charSets,0,0)
colnames(T174_ConcatLoci.charSets)[4:6] = c("start","stop","missing")
###information needed if you want to split information locus per locus...
for(i in 1:nrow(T174_ConcatLoci.charSets))
{
T174_ConcatLoci.charSets[i,4:5] = strsplit(T174_ConcatLoci.charSets[i,4],"-")[[1]]
}
#here we split information into a HUGE matrix, where each position contains a single nucleotide.
T174_all_loci_m = matrix(0, nrow = 57, ncol = nchar(T174_all_loci[2,2]))
for(i in 1:57)
{
T174_all_loci_m[i,] = strsplit(T174_all_loci[i+1,2],"")[[1]]
}
T174_all_loci_m = gsub("n","-",T174_all_loci_m)
#Here we calculate PER NUCLEOTIDE the % missing data from all 57 individuals
T174_all_loci_miss = rep(0,ncol(T174_all_loci_m))
for(i in 1:ncol(T174_all_loci_m))
{
temp1 = T174_all_loci_m[,i]
temp = length(temp1[temp1 == "-"]) / 57
T174_all_loci_miss[i] = temp
}
#we keep NUCLEOTIDES with less than 10% missing data and for a new object readable by raxml.
T174_all_loci_percent = T174_all_loci_miss[,T174_all_loci_miss < missing[m]]
T174_all_loci_percent_raxml = rep(0,57)
for(i in 1:57)
{
T174_all_loci_percent_raxml[i] = paste(T174_all_loci_percent[i,], collapse = "")
}
T174_all_loci_percent_raxml = cbind(T174_all_loci[2:58,1],T174_all_loci_percent_raxml)
T174_all_loci_percent_raxml = rbind(c(57,ncol(T174_all_loci_percent)),T174_all_loci_percent_raxml)
if(file.exists(paste("percent_missing_",missing[i],sep = "")) == F) system(paste("mkdir percent_missing_",missing[m],sep = "")) #set up new directory
setwd(paste("~/Dropbox/csbq/Colin_Favret/percent_missing_",missing[m],sep = ""))
write.table(T174_all_loci_percent_raxml,paste("T174_all_loci_raxml_",missing[m],sep = ""), row.names = F, col.names = F, quote = F,sep = "\t")
raxml_missing = paste("raxmlHPC-PTHREADS -T 4 -s T174_all_loci_percent_raxml -n T174_ConcatLoci -m GTRGAMMA -p 99682 -x 68316 -# 100 -f a -o I4332_TT13_1_Hemiptera_Aphididae_Essigella_californica_seq1,I4333_CF1269_Hemiptera_Aphididae_Eulachnus_rileyi_seq1,I4334_CF1290_Hemiptera_Aphididae_Schizolachnus_piniradiatae_seq1,I5710_CF1291_1_2_Hemiptera_Aphididae_Cinara_anelia_seq1,I5709_CF1340_2_Hemiptera_Aphididae_Cinara_curvipes_seq1,I9063_96497_Hemiptera_Phylloxeridae_Phylloxera_sp__seq1,I9063_96497_Hemiptera_Phylloxeridae_Phylloxera_sp__seq2,I9072_396861_Hemiptera_Aphididae_Aphis_gossypii_seq1,I9072_396861_Hemiptera_Aphididae_Aphis_gossypii_seq2,I9073_396963_Hemiptera_Adelgidae_Adelges_cooleyi_seq1,I9073_396963_Hemiptera_Adelgidae_Adelges_cooleyi_seq2",sep = "")
T174_all_loci_percent = T174_all_loci_miss[,T174_all_loci_miss < missing[m]]
T174_all_loci_percent_raxml = rep(0,57)
for(i in 1:57)
{
T174_all_loci_percent_raxml[i] = paste(T174_all_loci_percent[i,], collapse = "")
}
dim(T174_all_loci_miss)
dim(T174_all_loci_m)
T174_all_loci_percent = T174_all_loci_m[,T174_all_loci_miss < missing[m]]
T174_all_loci_percent_raxml = rep(0,57)
for(i in 1:57)
{
T174_all_loci_percent_raxml[i] = paste(T174_all_loci_percent[i,], collapse = "")
}
T174_all_loci_percent_raxml = cbind(T174_all_loci[2:58,1],T174_all_loci_percent_raxml)
T174_all_loci_percent_raxml = rbind(c(57,ncol(T174_all_loci_percent)),T174_all_loci_percent_raxml)
if(file.exists(paste("percent_missing_",missing[i],sep = "")) == F) system(paste("mkdir percent_missing_",missing[m],sep = "")) #set up new directory
setwd(paste("~/Dropbox/csbq/Colin_Favret/percent_missing_",missing[m],sep = ""))
write.table(T174_all_loci_percent_raxml,paste("T174_all_loci_raxml_",missing[m],sep = ""), row.names = F, col.names = F, quote = F,sep = "\t")
raxml_missing = paste("raxmlHPC-PTHREADS -T 4 -s T174_all_loci_percent_raxml -n T174_ConcatLoci -m GTRGAMMA -p 99682 -x 68316 -# 100 -f a -o I4332_TT13_1_Hemiptera_Aphididae_Essigella_californica_seq1,I4333_CF1269_Hemiptera_Aphididae_Eulachnus_rileyi_seq1,I4334_CF1290_Hemiptera_Aphididae_Schizolachnus_piniradiatae_seq1,I5710_CF1291_1_2_Hemiptera_Aphididae_Cinara_anelia_seq1,I5709_CF1340_2_Hemiptera_Aphididae_Cinara_curvipes_seq1,I9063_96497_Hemiptera_Phylloxeridae_Phylloxera_sp__seq1,I9063_96497_Hemiptera_Phylloxeridae_Phylloxera_sp__seq2,I9072_396861_Hemiptera_Aphididae_Aphis_gossypii_seq1,I9072_396861_Hemiptera_Aphididae_Aphis_gossypii_seq2,I9073_396963_Hemiptera_Adelgidae_Adelges_cooleyi_seq1,I9073_396963_Hemiptera_Adelgidae_Adelges_cooleyi_seq2",sep = "")
raxml_missing
paste("~/Dropbox/csbq/Colin_Favret/percent_missing_",missing[m],sep = "")
paste("mkdir percent_missing_",missing[m],sep = "")
setwd(paste("~/Dropbox/CSBQ/Colin_Favret/percent_missing_",missing[m],sep = ""))
(paste("~/Dropbox/CSBQ/Colin_Favret/percent_missing_",missing[m],sep = ""))
getwd()
setwd("~/Dropbox/CSBQ/Colin_Favret/percent_missing_0.5")
setwd("~/Dropbox/CSBQ/Colin_Favret/percent_missing_0.1/")
library(prettyR)
install.packages("rmarkdown")
library(rmarkdown)
def.par <- par(no.readonly = TRUE)
par(def.par)
#setup layout as a 3 X 3 matrix.
#layout(matrix(c(2,1,1,2,1,1,3,1,1), 3, 3, byrow = TRUE))
#save plot.phylo parameters, without plotting
phylo = plot.phylo(bird.orders, edge.width = 2, label.offset = 1, plot = F, cex = 1.2)
#three colors vector
colors = c("#FF000060","#0000ff60","#551a8b60")
###REGION 1
#add boxes based on the y axis coordinates, the x-axis coord. are based on the phylogeny, and your groups of interest
rect(phylo$x.lim[1],0.5,phylo$x.lim[2],5.5,col = colors[1],border = F)
rect(phylo$x.lim[1],6.5,phylo$x.lim[2],12.5,col = colors[2], border = F)
rect(phylo$x.lim[1],13.5,phylo$x.lim[2],23.5, col = colors[3],border = F)
#add phylo on top
par(new = T)
plot.phylo(bird.orders, edge.width = 2, label.offset = 1, cex = 1.2)
###REGION 2
#set up some margins for region # 2 of layout
par(mar = c(11,4,11,0))
#add another x/y scatter plot in region # 2 of layout
#but first, set up fake data (say a fake PCA data)
pca = cbind(c(rnorm(6,mean=0,sd =1), rnorm(7,mean=2,sd =0.5),rnorm(10,mean=3,sd =0.5)),c(rnorm(6,mean=0,sd =1), rnorm(7,mean=0,sd =0.3),rnorm(10,mean=3,sd =0.2)))
rownames(pca) = bird.orders$tip.label
#colors according to boxes in tree
colors_according_to_tree = c(rep(colors[1],5),"black",rep(colors[2],6),"black",rep(colors[3],10))
plot(pca,col = colors_according_to_tree,lwd =3,pch = 21, ylab = "random variable 1", xlab = "random variable 2")
####REGION 3
#reset margins
par(mar = c(5,4,4,3))
#empty plot in region 3
plot(1, type="n", xlab="", ylab="", xlim=c(0, 1), ylim=c(0, 1),xaxt="n",yaxt= "n", bty = "n")
#add a legend
legend(0.1,1.5,legend = c("group1","group2","group3"),fill = colors,xpd = T, cex = 2)
par(mar = c(5,4,4,2))
m = matrix(c(1,2,3,4,5,6,7,8,9), 3, 3, byrow = TRUE)
layout(m)
for(i in 1:9)
{
plot(sample(1:10),c(1:10))
}
dev.new()
par(mar = c(5,4,4,2))
m = matrix(c(1,2,3,4,5,6,7,8,9), 3, 3, byrow = TRUE)
layout(m)
for(i in 1:9)
{
plot(sample(1:10),c(1:10))
}
?dev.new()
dev.new(width=6, height=6)
par(mar = c(5,4,4,2))
m = matrix(c(1,2,3,4,5,6,7,8,9), 3, 3, byrow = TRUE)
layout(m)
for(i in 1:9)
{
plot(sample(1:10),c(1:10))
}
dev.new(width=6, height=9)
par(mar = c(5,4,4,2))
m = matrix(c(1,2,3,4,5,6,7,8,9), 3, 3, byrow = TRUE)
layout(m)
for(i in 1:9)
{
plot(sample(1:10),c(1:10))
}
dev.new(width=3, height=9)
par(mar = c(5,4,4,2))
m = matrix(c(1,2,3,4,5,6,7,8,9), 3, 3, byrow = TRUE)
layout(m)
for(i in 1:9)
{
plot(sample(1:10),c(1:10))
}
dev.set(1)
dev.set(2)
plot(1,1)
dev.set(2)
plot(1,1)
plot(1,1)
plot(1,1)
plot(1,1)
plot(1,1)
plot(1,1)
plot(1,1)
par(def.par)
par(def.par)
plot(1,1)
par()
?par
?par$cin
x = par
x$cin
x
papa par()
par()$cin
par()$din
plot(1,1)
layout(m)
dev.off()
dev.off()
dev.off()
layout(m)
#library and dataset
library(ape)
data(bird.orders)
#default (ugly)
phylo = plot.phylo(bird.orders)
dev.off()
dev.off()
#library and dataset
library(ape)
data(bird.orders)
#default (ugly)
phylo = plot.phylo(bird.orders)
#slightly better default (better, but drab)
phylo = plot.phylo(bird.orders, edge.width = 2, label.offset = 1,cex = 0.75)
phylo = plot.phylo(bird.orders, edge.width = 2, label.offset = 1, cex = 0.75)
axis(2,at =seq(from =0, to = phylo$y.lim[2]),cex.axis = 0.5)
system("mothur --help")
system("mothur -help")
system("mothur \"#help()\"")
getwd()
setwd("~/Documents/MANUSCRIPTS/2017/39.Venustachonca_genome_paper/dir_k41_B24G_H4_kc3/annotation_quast_v3/predicted_genes")
##modify format (because of the broken gffs...
gff = read.table("assembly_k41_B24G_H4_kc3-10_broken_glimmer_genes.gff",stringsAsFactors=F)
gff_modified = gff
dim(gff)
gfff = head(gff,10)
gff_modified = gfff
gfff[1,1]
substring(gfff[1,1],1,10)
gfff = head(gff,1000)
gff = head(gff,1000)
gff_modified = gff
for(i in 1:nrow(gff))
{
temp = strsplit(gff[i,1],"_")[[1]][-length(strsplit(gff[i,1],"_")[[1]])]
gff_modified[i,1] = paste(temp,collapse = "_")
if(i %% 100 == 0) print(paste("done ",i," of:",nrow(gff)," The time is:",Sys.time(),sep = ""))
}
gff = read.table("assembly_k41_B24G_H4_kc3-10_broken_glimmer_genes.gff",stringsAsFactors=F,nrow = 10000)
gff_modified = gff
for(i in 1:nrow(gff))
{
temp = strsplit(gff[i,1],"_")[[1]][-length(strsplit(gff[i,1],"_")[[1]])]
gff_modified[i,1] = paste(temp,collapse = "_")
if(i %% 1000 == 0) print(paste("done ",i," of:",nrow(gff)," The time is:",Sys.time(),sep = ""))
}
##modify format (because of the broken gffs...
gff = read.table("assembly_k41_B24G_H4_kc3-10_broken_glimmer_genes.gff",stringsAsFactors=F)
gff_modified = gff
for(i in 1:nrow(gff))
{
temp = strsplit(gff[i,1],"_")[[1]][-length(strsplit(gff[i,1],"_")[[1]])]
gff_modified[i,1] = paste(temp,collapse = "_")
if(i %% 1000 == 0) print(paste("done ",i," of:",nrow(gff)," The time is:",Sys.time(),sep = ""))
}
gff_modified = gff[,1]
for(i in 1:nrow(gff))
{
split = strsplit(gff_modified[i],"_")[[1]]
temp = split[-length(split)]
gff_modified[i] = paste(temp,collapse = "_")
if(i %% 1000 == 0) print(paste("done ",i," of:",nrow(gff)," The time is:",Sys.time(),sep = ""))
}
gff[,1]	= gff_modified
write.table(gff_modified,"temp", quote = F, sep = "\t",row.names = F, col.names = F)
getwd()
system("head -1 ../../annotation_quast_v3/predicted_genes/assembly_k41_B24G_H4_kc3-10_broken_glimmer_genes.gff >head")
system("cat head temp >../../annotation_quast_v3/predicted_genes/assembly_k41_B24G_H4_kc3-10_broken_glimmer_genes2.gff")
system("rm head temp")
system("ls -thro")
dim(gff)
write.table(gff,"temp", quote = F, sep = "\t",row.names = F, col.names = F)
system("head -1 ../../annotation_quast_v3/predicted_genes/assembly_k41_B24G_H4_kc3-10_broken_glimmer_genes.gff >head")
system("cat head temp >../../annotation_quast_v3/predicted_genes/assembly_k41_B24G_H4_kc3-10_broken_glimmer_genes2.gff")
system("rm head temp")
